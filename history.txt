[at physical rpi]
`log into user 'pi'`
sudo raspi-config
`ssh enable`
sudo reboot

[at any terminal]
`ssh into pi`
sudo raspi-config
`change password to 'Letmein11'`
`change hostname to 'TY128-RPI3'`
`reboots`
`ssh into pi`
sudo apt-get update -y && sudo apt-get upgrade -y
sudo apt-get autoremove
sudo reboot

[verify and setup python]
`ssh into pi`
python -V
python3 -V (should error as python3 is not installed by default on jessie lite)

sudo apt-get install python3 -y
sudo apt-get install python3-pip python3-dev libpq-dev postgresql postgresql-contrib nginx -y

[Setup Alias]
sudo nano ~/.bashrc

"""
### Custom Aliases
alias ll='ls -AhlF'
alias la='ls -A'
alias l='ls -CF'
alias e="nano ~/.bashrc"
alias save="source ~/.bashrc; source ~/.profile"
alias ..="cd .."
alias ws="cd ~/Developer"
alias root="cd /"
alias bin="cd /usr/bin"
alias ~="cd ~"

### Python Aliases
# alias ve="source bin/activate"
# alias d="deactivate"
alias pip="pip3"

### Django Aliases
alias rs="python manage.py runserver 137.190.117.94:8000"
alias mm="python manage.py makemigrations"
alias m="python manage.py migrate"

### Network Aliases
alias ip='ipconfig getifaddr en1'
alias nic='ipconfig getifaddr en0'

### Git Aliases
alias g="git "
alias gs="git status"
alias ga="git add . && git status"
alias gm="git add . && git status && git commit -m"
alias gc!='git add . && git commit -m "quick commit" && git push && git status'
alias gpush='git push'
alias gpull='git pull'
alias glog='git log --graph --decorate  --all --pretty=oneline'

### Virtual Wrapper Aliases
VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3.4
export WORKON_HOME=$HOME/.virtualenvs
export PROJECT_HOME=$HOME/Developer
source /usr/local/bin/virtualenvwrapper.sh
alias ve="workon "
alias d="deactivate"
"""

`save file and exit`
mkdir ~/Developer
ws


[Setup Git and SSH key]
sudo apt-get install git -y
ssh-keygen -t rsa -b 4096 -C "tylerhardy@gmail.com"
`press enter`
`press enter`
`press enter`
eval $(ssh-agent -s)
ssh-add ~/.ssh/id_rsa
cat ~/.ssh/id_rsa.pub
`copy hash to github new ssh key`
git config --global user.name "Tyler Hardy"
git config --global user.email "tylerhardy@gmail.com"
ws
git clone git@github.com:tylerhardy/inventory_project.git

[Setup POSTGRESS PSQL]
sudo -u postgres psql
CREATE DATABASE cos_inv_db;
CREATE USER tylerhardy WITH PASSWORD 'Letmein11';
ALTER ROLE tylerhardy SET client_encoding to 'utf8';
ALTER ROLE tylerhardy SET default_transaction_isolation TO 'read committed';
ALTER ROLE tylerhardy SET timezone TO 'America/Denver';
GRANT ALL PRIVILEGES ON DATABASE cos_inv_db TO tylerhardy;
\q

[Setting up Virtual Environment]
`update pip3`
pip3 -V
sudo pip3 install --upgrade pip
sudo pip3 install virtualenv
sudo pip3 install virtualenvwrapper
mkvirtualenv inv_prod
nano $VIRTUAL_ENV/bin/postactivate
export DJANGO_SETTINGS_MODULE="inventory.settings.production"

nano $VIRTUAL_ENV/bin/predeactivate
unset DJANGO_SETTINGS_MODULE


[Setup Django Requirments]
pip install -r requirements/production.txt
`modify settings`
python manage.py makemigrations
python manage.py migrate
python manage.py createsuperuser
python manage.py collectstatic

[firewall]
sudo apt-get install ufw
sudo ufw allow 8000
python manage.py runserver 0.0.0.0:8000

[Testing Gunicorn]
cd ~/Developer/inventory_project
gunicorn --bind 0.0.0.0:8000 inventory.wsgi
`test webiste in browser`
deactivate

[Create Gunicorn systemd Service File]
sudo nano /etc/systemd/system/gunicorn.service
`paste the following:`
"""
[Unit]
Description=gunicorn daemon
After=network.target


[Service]
User=pi
Group=www-data
WorkingDirectory=/home/pi/Developer/inventory_project
ExecStart=/home/pi/.virtualenvs/inv_prod/bin/gunicorn --access-logfile - --workers 3 --bind unix:/home/pi/Developer/inventory_project/inventory.sock inventory.wsgi:application

[Install]
WantedBy=multi-user.target
"""
`save and exit nano`
sudo systemctl start gunicorn
sudo systemctl enable gunicorn

[Check for the Gunicorn Socket File]
sudo systemctl status gunicorn
`verify that inventory.sock is listed`
ls /home/pi/Developer/inventory_project
`if issue use troubleshooting log`
sudo journalctl -u gunicorn
`if changes made restart daemon`
sudo systemctl daemon-reload
sudo systemctl restart gunicorn

[sudo systemctl restart gunicorn]
sudo nano /etc/nginx/sites-available/inventory_project

"""
server {
    listen 80;
    server_name 137.190.117.94;

    location = /favicon.ico { access_log off; log_not_found off; }
    location /static/ {
        root /home/pi/Developer/inventory_project/inventory;
    }

    location / {
        include proxy_params;
        proxy_pass http://unix:/home/pi/Developer/inventory_project/inventory.sock;
    }
}
"""

sudo ln -s /etc/nginx/sites-available/inventory_project /etc/nginx/sites-enabled
sudo nginx -t
sudo systemctl restart nginx

sudo ufw delete allow 8000
sudo ufw allow 'Nginx Full'


